#BlueJ class context
comment0.target=MediumAI
comment0.text=\n\ Class\ that\ implements\ the\ mid-difficulty\ AI\ and\ implements\ the\ contract\ of\ the\ class\ AI.\n\n\ @author\ Oscar\ Galindo,\ Mario\ Delgado\n\ \n
comment1.params=board
comment1.target=MediumAI(Board)
comment1.text=\ \n\ \ Constructor\ of\ the\ objects\ Medium\ AI.\n
comment2.params=
comment2.target=void\ makeMove()
comment2.text=\n\ \ Method\ that\ executes\ the\ necessary\ steps\ to\ make\ a\ move.\n
comment3.params=
comment3.target=void\ getCoordinates()
comment3.text=\n\ \ Decides\ the\ coordinates\ to\ be\ played\ either\ deffensively\ or\ offensively.\n
comment4.params=analyzed\ enemy
comment4.target=boolean\ possibleFive(boolean[][],\ boolean[][])
comment4.text=\n\ \ Indicates\ if\ either\ the\ player\ or\ the\ AI\ have\ a\ possibility\ to\ have\ a\ connect\ five.\n\ \ @param\ boolean\ analyzed[][]\ (Array\ of\ the\ entity,\ user/AI\ that\ will\ be\ analyzed).\n\ \ @param\ boolean\ enemy[][]\ (Array\ of\ the\ opposite\ entity).\n\ \ @return\ boolean\ possible\ an\ indiciation\ of\ whether\ the\ analyzed\ entity\ (AI\ or\ user)\ has\ relevant\ options\ of\ winning.\n
comment5.params=orig_x\ orig_y\ delta_x\ delta_y\ prov
comment5.target=boolean\ decision(int,\ int,\ int,\ int,\ boolean[])
comment5.text=\n\ \ Analyses\ every\ chunk\ of\ the\ board\ extracted\ in\ possibleFive\ method.\n\ \ @see\ possibleFive\n\ \ @param\ int\ origin_x\ first\ x\ coordinate\ of\ the\ chunk\ extracted.\n\ \ @param\ int\ origin_y\ first\ y\ coordinate\ of\ the\ chunk\ extracted.\n\ \ @param\ int\ delta_x\ numerical\ change\ in\ the\ axis\ of\ the\ x\ coordinate.\n\ \ @param\ int\ delta_y\ numerical\ change\ in\ the\ axis\ of\ the\ y\ coordinate.\n\ \ @param\ boolean\ prov[]\ reference\ to\ the\ boolean\ array,\ chunk\ generated\ in\ possibleFive.\n\ \ @return\ boolean\ indicating\ if\ this\ chunk\ of\ the\ board\ contains\ a\ possibility\ to\ connect\ five\ exists.\n
comment6.params=entityArr
comment6.target=void\ setCoordinates(boolean[][])
comment6.text=\n\ \ Sets\ the\ coordinates\ to\ be\ played/used\ based\ on\ every\ execution.\n\ \ @param\ boolean\ entiyArr[][]\ (Reference\ to\ the\ array\ that\ the\ execution\ is\ analyzing).\n
comment7.params=x\ y
comment7.target=boolean\ permitted(int,\ int)
comment7.text=\ Reports\ if\ the\ position\ being\ checked\ by\ the\ win\ method\ actually\ \n\ \ exists\ within\ the\ array\ of\ the\ player\ whose\ turn\ it\ is.\n\ \ @param\ x\ x\ input\n\ \ @param\ y\ y\ input\n\ \ @return\ boolean\ that\ indiciates\ if\ the\ coordinate\ that\ will\ be\ accessed\ by\ the\ win\ method\ actually\ exists.\n
comment8.params=board
comment8.target=void\ setBoard(Board)
comment8.text=\n\ \ Setter\ for\ updating\ the\ board\ instance\ being\ currently\ used\ in\ execution.\n\ \ @param\ Board\ board\ (model\ of\ the\ game).\n
numComments=9
