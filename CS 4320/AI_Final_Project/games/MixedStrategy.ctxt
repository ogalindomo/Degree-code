#BlueJ class context
comment0.target=MixedStrategy
comment0.text=\n\ A\ class\ the\ encapsulates\ the\ notion\ of\ a\ mixed\ strategy\:\n\ the\ probability\ of\ playing\ each\ action,\ summing\ to\ 1\n\ Note\:\ strategies\ are\ labeled\ 1..numActions\n
comment1.params=probs
comment1.target=MixedStrategy(double[])
comment1.text=\n\ Create\ a\ new\ mixed\ strategy\ object\ representing\ these\ probabilities\n\ @param\ probs\ the\ strategy\ probabilities\ to\ set\n
comment10.params=action\ prob
comment10.target=void\ setProb(int,\ double)
comment10.text=\n\ Set\ the\ probability\ of\ playing\ a\ given\ action\n\ @param\ action\ action\ number\n\ @param\ prob\ the\ probability\ to\ set\n
comment11.params=probs
comment11.target=void\ setProbs(double[])
comment11.text=\n\ Set\ all\ action\ probabilities\n\ @param\ probs\ the\ probabilities\n
comment12.params=ms
comment12.target=void\ setProbs(MixedStrategy)
comment12.text=\n\ set\ the\ mixed\ strategy\n\ @param\ ms\ the\ mixed\ strategy\n
comment13.params=
comment13.target=void\ normalize()
comment13.text=\n\ Normalize\ the\ vector\ to\ sum\ to\ 1\n
comment14.params=payoffs
comment14.target=void\ setBestResponse(double[])
comment14.text=\n\ Sets\ the\ mixed\ strategy\ to\ a\ uniform\ mixture\ over\ the\ actions\ that\ have\ the\n\ highest\ payoffs\ in\ the\ given\ payoff\ vector\n\n\ @param\ payoffs\ payoffs\ for\ each\ pure\ strategy\n
comment15.params=delta
comment15.target=void\ mixWithUniform(double)
comment15.text=\n\ play\ randomly\ with\ probability\ delta;\ the\ current\ mixture\ with\ probability\ 1-delta\n\ @param\ delta\ see\ above\n
comment16.params=
comment16.target=boolean\ isValid()
comment16.text=\n\ Determines\ whether\ the\ probabilities\ sum\ to\ 1\ (within\ a\ tolerance\ of\ 0.01)\n\ @return\ true\ when\ value\ false\ otherwise\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\n\ Returns\ a\ string\ representation\ of\ the\ mixed\ strategy\n\ @return\ standard\ toString()\n
comment2.params=nActions
comment2.target=MixedStrategy(int)
comment2.text=\n\ Create\ a\ new\ mixed\ strategy\ for\ the\ given\ number\ of\ actions;\n\ defaults\ to\ uniform\ mixture\n\ @param\ nActions\ the\ number\ of\ actions\n
comment3.params=nActions\ initialValue
comment3.target=MixedStrategy(int,\ double)
comment3.text=\n\ Create\ a\ new\ mixed\ strategy\ for\ the\ given\ number\ of\ actions;\n\ initial\ probability\ of\ each\ action\ is\ given\n\ @param\ nActions\ the\ number\ of\ actions\n\ @param\ initialValue\ the\ initial\ value\n
comment4.params=
comment4.target=int\ getNumActions()
comment4.text=\n\ Returns\ the\ number\ of\ actions\ represented\n\ @return\ the\ number\ of\ actions\n
comment5.params=action
comment5.target=double\ getProb(int)
comment5.text=\n\ Returns\ the\ probability\ of\ playing\ a\ particular\ action\n\ @param\ action\ the\ action\ you\ want\ the\ probability\ of\n\ @return\ that\ action's\ probability\n
comment6.params=
comment6.target=double[]\ getProbs()
comment6.text=\n\ Return\ all\ action\ probabilities\ as\ an\ array\n\ @return\ the\ action\ probabilities\n
comment7.params=
comment7.target=void\ setUniform()
comment7.text=\n\ Resets\ the\ strategy\ to\ the\ uniform\ strategy\n
comment8.params=
comment8.target=void\ setRandom()
comment8.text=\n\ Resets\ the\ mixed\ strategy\ to\ a\ randomly-chosen\ strategy\n
comment9.params=
comment9.target=void\ setZeros()
comment9.text=\n\ Set\ all\ probabilities\ to\ zero\n
numComments=18
